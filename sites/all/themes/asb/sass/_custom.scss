//
// Custom sass mixins
//
// To use a mixin in this file, add this line to the top of your .scss file:
//   @import "base";
// Then to use a mixin for a particular rule, add this inside the ruleset's
// curly brackets:
//   @include mix-in-name;

//
// mixin for bullet proof font declaration syntax
// http://pivotallabs.com/bulletproof-font-face-syntax-with-sass/
// modified to have font-id argument for SVG fonts (otherwise identifier and font id always have to be the same)
//

@mixin font-face($font-family, $font-id, $file-path, $weight: normal, $style: normal ) {
  @font-face {
      font-family: $font-family;
      src: url('#{$file-path}.eot');
      src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'),
           url('#{$file-path}.woff') format('woff'),
           url('#{$file-path}.ttf') format('truetype'),
           url('#{$file-path}.svg##{$font-id}') format('svg');
      font-weight: $weight;
      font-style: $style;
      font-stretch: none;
  }
}

@function blackTranslucent($opacity){
    @return rgba(0,0,0,$opacity)
}
@function whiteTranslucent($opacity){
    @return rgba(255,255,255,$opacity)
}

@mixin whiteOverlay($opacity){
  background: whiteTranslucent($opacity);
}

@mixin blackOverlay($opacity){
  background: blackTranslucent($opacity);
}

@mixin abs( $top: 0, $right: none, $bottom: none, $left: 0, $zindex: 0 ){
  //position the element
  position: absolute;
  top: $top;
  left: $left;
  z-index: $zindex;
//  wanted to use the & (parent selector) to set the parent position to relative and call this absRelToParent (or something similar)
// but it didnt seem to work
}

@mixin triangle ($size, $color, $direction) {
  height: 0;
  width: 0;

  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {
    border-color: transparent;
    border-style: solid;
    border-width: $size / 2;

    @if $direction == up {
      border-bottom-color: $color;

    } @else if $direction == right {
      border-left-color:   $color;

    } @else if $direction == down {
      border-top-color:    $color;

    } @else if $direction == left {
      border-right-color:  $color;
    }
  }

  @else if ($direction == up-right) or ($direction == up-left) {
    border-top: $size solid $color;

    @if $direction == up-right {
      border-left:  $size solid transparent;

    } @else if $direction == up-left {
      border-right: $size solid transparent;
    }
  }

  @else if ($direction == down-right) or ($direction == down-left) {
    border-bottom: $size solid $color;

    @if $direction == down-right {
      border-left:  $size solid transparent;

    } @else if $direction == down-left {
      border-right: $size solid transparent;
    }
  }
}
// element-invisible as defined by http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

// The word "Unpublished" displayed underneath unpublished nodes and comments.
@mixin unpublished-div {
  height: 0;
  overflow: visible;
  color: #d8d8d8;
  font-size: 75px;
  line-height: 1;
  font-family: Impact, "Arial Narrow", Helvetica, sans-serif;
  font-weight: bold;
  text-transform: uppercase;
  text-align: center;
  word-wrap: break-word; // A very nice CSS3 property

  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    .lt-ie8 &>* {
      position: relative; // Otherwise these elements will appear below the "Unpublished" text.
    }
  }
}

@mixin standard-border($color: $rules-color, $width: 1px) {
    color: $color;
    width: $width;
    style: solid;
}

@mixin zigzag-border ($foreground-color: $odd-backdrop, $background-color: $even-backdrop, $angle: 135deg, $size: 12px) {
    background:
      linear-gradient(-$angle, $foreground-color 5px, transparent 0) 0 5px,
      linear-gradient($angle, $foreground-color 5px, $background-color 0) 0 5px;
    background-image: 
      -webkit-gradient(-$angle, $foreground-color 5px, transparent 0) 0 5px,
      -webkit-gradient($angle, $foreground-color 5px, $background-color 0) 0 5px;
    background-color: $foreground-color;
    background-position: left bottom;
    background-position-x: left;
    background-position-y: bottom;
    background-repeat: repeat-x;
    background-size: $size $size;
}

@mixin shadow ($h-shadow: 10px, $v-shadow: 10px, $blur: 5px, $spread: 5px, $color: #888888){
  box-shadow: $h-shadow $v-shadow $blur $spread $color;
}

@mixin vertical-ticks ($angle: 90deg, $color: $text-color-secondary, $width: 1px, $spacing: 50%) {
    background-image: 
      linear-gradient($angle, $color $width, transparent $width);
    background-size: $spacing;
    background-position: -$width;
}

@mixin font-icon-family($family:"iconic", $file:"iconic") {
  @if $family == "iconic" {
    $family:"IconicFill";
    $file:"iconic";
  }
  @else if $family == "entypo" {
    $family:"entypo";
    $file:"entypo";
  }
  @font-face {
    font-family: '#{$family}'; 
    src: font-url('#{$file}.eot'); 
    src: font-url('#{$file}.eot?#iefix') format('embedded-opentype'),
         font-url('#{$file}.woff') format('woff'),
         font-url('#{$file}.ttf') format('truetype'),
         font-url('#{$file}.svg##{$family}') format('svg'),
         font-url('#{$file}.otf') format('opentype');
    font-weight: normal; font-style: normal;
  }
}

@mixin font-icon-base($family:"entypo", $font-size: 1em, $width: 1em, $margin: 0.8em, $align: center) {
  $family:"entypo";
  $file:"entypo";
  &:before {
    font-family: "#{$family}";
    font-style: normal;
    font-size: $font-size;
    margin-right: $margin;
    text-align: $align;
    display: inline-block;
    width: $width;
  }
}

@mixin hidden-text {
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
}

@mixin button($height: 24px, $color: $accent, $radius: 4px, $font-size: $base-font-size, $font-color: #fff, $font-family: $base-font-family, $display: inline-block) {
  display: $display;
  padding: 0 20px;
  height: $height;
  line-height: $height;
  background-color: $color;
  color: $font-color;
  font-size: $font-size;
  font-family: $font-family;
  border-radius: $radius;
  text-align: center;
  &:hover {
      color: $font-color;
  }
}




